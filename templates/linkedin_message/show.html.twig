{% extends 'base.html.twig' %}

{% block title %}{{ jobOfferName }} - Message LinkedIn{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        @media print {
            .no-print {
                display: none !important;
            }
            .print-content {
                padding: 2cm;
            }
        }
        .message-content {
            font-family: 'Arial', sans-serif;
            line-height: 1.6;
        }
    </style>
{% endblock %}

{% block body %}
    {# Barre de navigation secondaire #}
    <nav class="bg-gray-100 shadow-md no-print">
        <div class="container px-4 py-3 mx-auto">
            <div class="flex items-center justify-between">
                <div class="text-gray-600">
                    <a href="{{ path('app_dashboard') }}" class="hover:text-gray-900">Dashboard</a>
                    <span class="mx-2">/</span>
                    <span class="text-gray-900">Message LinkedIn</span>
                </div>
                <div class="flex items-center space-x-4">
                    <span class="text-sm text-gray-500">
                        Dernière modification: {{ "now"|date("d/m/Y H:i") }}
                    </span>
                </div>
            </div>
        </div>
    </nav>

    <div class="container px-4 py-8 mx-auto">
        {# Messages Flash #}
        {% for label, messages in app.flashes %}
            {% for message in messages %}
                <div class="mb-4 p-4 rounded-lg {% if label == 'success' %}bg-green-100 text-green-700 border border-green-400{% else %}bg-red-100 text-red-700 border border-red-400{% endif %} fade-out">
                    {{ message }}
                </div>
            {% endfor %}
        {% endfor %}

        {# En-tête et informations sur l'offre #}
        <div class="p-6 mb-6 bg-white rounded-lg shadow-lg no-print">
            <div class="flex items-start justify-between">
                <div>
                    <h1 class="text-3xl font-bold text-gray-900">{{ jobOfferName }}</h1>
                    <p class="mt-2 text-gray-600">Message LinkedIn</p>
                </div>
                <div class="flex space-x-2">
                    <span class="px-3 py-1 text-sm text-blue-800 bg-blue-100 rounded-full">
                        {{ jobOffer.company ?? 'Entreprise' }}
                    </span>
                    <span class="px-3 py-1 text-sm text-green-800 bg-green-100 rounded-full">
                        {{ jobOffer.location ?? 'Localisation' }}
                    </span>
                </div>
            </div>
        </div>

        {# Contenu du message #}
        <div class="mb-6 bg-white rounded-lg shadow-lg print-content">
            {# Barre d'outils #}
            <div class="flex items-center justify-between p-4 border-b bg-gray-50 no-print">
                <h2 class="text-xl font-semibold text-gray-700">Contenu du message</h2>
                <div class="flex space-x-2">
                    <button onclick="toggleEditMode()" 
                            class="px-3 py-1 text-white transition-colors bg-blue-600 rounded hover:bg-blue-700">
                        <i class="mr-1 fas fa-edit"></i> Mode édition
                    </button>
                    <button onclick="copyToClipboard()" 
                            class="px-3 py-1 text-white transition-colors bg-gray-600 rounded hover:bg-gray-700">
                        <i class="mr-1 fas fa-copy"></i> Copier
                    </button>
                </div>
            </div>

            {# Zone de contenu éditable #}
            <div class="p-8 message-content" id="messageContent">
                {{ LMContent|raw }}
            </div>
        </div>

        {# Actions principales #}
        <div class="flex items-center justify-between mt-6 no-print">
            <div class="flex space-x-4">
                <a href="{{ path('app_dashboard') }}" 
                   class="px-4 py-2 text-white transition-colors bg-gray-600 rounded hover:bg-gray-700">
                    <i class="mr-2 fas fa-arrow-left"></i> Retour
                </a>
                <button onclick="saveMessage()" 
                        class="hidden px-4 py-2 text-white transition-colors bg-blue-600 rounded hover:bg-blue-700" 
                        id="saveButton">
                    <i class="mr-2 fas fa-save"></i> Enregistrer
                </button>
            </div>
            
            <form action="{{ path('app_linkedin_delete', {'id': app.request.get('id')}) }}" 
                  method="post" 
                  onsubmit="return confirm('Êtes-vous sûr de vouloir supprimer ce message LinkedIn ?');" 
                  class="inline">
                <input type="hidden" name="_token" value="{{ csrf_token('delete') }}">
                <button type="submit" 
                        class="px-4 py-2 text-white transition-colors bg-red-600 rounded hover:bg-red-700">
                    <i class="mr-2 fas fa-trash"></i> Supprimer
                </button>
            </form>
        </div>
    </div>

    {# Scripts #}
    <script>
        function copyToClipboard() {
            const content = document.querySelector('.message-content').innerText;
            navigator.clipboard.writeText(content)
                .then(() => {
                    showNotification('Message copié dans le presse-papiers !', 'success');
                })
                .catch(() => {
                    showNotification('Erreur lors de la copie', 'error');
                });
        }

        function toggleEditMode() {
            const content = document.getElementById('messageContent');
            const saveButton = document.getElementById('saveButton');
            
            if (content.contentEditable === 'true') {
                content.contentEditable = 'false';
                content.classList.remove('border', 'border-blue-300', 'focus:outline-none');
                saveButton.classList.add('hidden');
            } else {
                content.contentEditable = 'true';
                content.classList.add('border', 'border-blue-300', 'focus:outline-none');
                saveButton.classList.remove('hidden');
            }
        }

        function saveMessage() {
            const content = document.getElementById('messageContent').innerHTML;
            
            fetch('{{ path('app_linkedin_update', {'id': app.request.get('id')}) }}', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': '{{ csrf_token('update') }}'
                },
                body: JSON.stringify({ content: content })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showNotification('Message enregistré avec succès!', 'success');
                    toggleEditMode();
                } else {
                    showNotification('Erreur lors de l\'enregistrement', 'error');
                }
            })
            .catch(() => {
                showNotification('Erreur lors de l\'enregistrement', 'error');
            });
        }

        function showNotification(message, type) {
            const notification = document.createElement('div');
            notification.className = `fixed bottom-4 right-4 p-4 rounded-lg shadow-lg ${
                type === 'success' ? 'bg-green-500' : 'bg-red-500'
            } text-white`;
            notification.textContent = message;
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.remove();
            }, 3000);
        }

        document.addEventListener('DOMContentLoaded', () => {
            setTimeout(() => {
                document.querySelectorAll('.fade-out').forEach(el => {
                    el.style.opacity = '0';
                    el.style.transition = 'opacity 0.5s';
                    setTimeout(() => el.remove(), 500);
                });
            }, 5000);
        });
    </script>
{% endblock %}